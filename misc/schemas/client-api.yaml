openapi: 3.0.3
info:
  title: Lethean VPN client OpenAPI
  description: |-
    This is Lethean VPN API definition
  license:
      name: GPLv3
  version: "1.0"

paths:
  /api/vdp:
    get:
      summary: Get VDP
      description: Get VPN Description Protocol containing all known Spaces and Gateways
      operationId: getVdp
      parameters:
        - in: query
          name: checkOnly
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vdp'
        '500':
          description: server error
    post:
      summary: Post new VDP to client
      description: Post new VDP to client
      operationId: pushVdp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vdp'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vdp'
        '443':
          description: Error in VDP

  /api/connect:
    post:
      summary: Connect existing prepaid session
      description: Connect existing prepaid session
      operationId: Connect
      parameters:
        - in: query
          name: sessionid
          schema:
            type: string
      responses:
        '200':
          description: Connected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '400':
          description: Bad request
        '402':
          description: Awaiting payment
        '404':
          description: Session not found
        '460':
          description: Unknown/bad space
        '461':
          description: Unknown/bad gate
        '462':
          description: Cannot use this space/gate combination
        '500':
          description: Server error

  /api/disconnect:
    get:
      parameters:
      - in: query
        name: connectionid
        schema:
          type: string
      summary: Disconnect connection
      description: Disconnect connection
      operationId: Disconnect
      responses:
        '200':
          description: Disconnected
        '404':
          description: Bad connection ID

  /api/connections:
    get:
      summary: Get Active connections
      description: Get active connections
      operationId: getConnections
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connections'

  /api/session:
    post:
      summary: Prepare session to connect to Space using Gate
      description: Prepare session to connect to Space using Gate
      operationId: Session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRequest'
      responses:
        '200':
          description: Connected
        '400':
          description: Bad request
        '402':
          description: Waiting for payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '460':
          description: Unknown/bad space
        '461':
          description: Unknown/bad gate
        '462':
          description: Cannot use this space/gate combination
        '500':
          description: Server error
    get:
      summary: Get session info
      description: Get session info
      operationId: getSession
      parameters:
        - in: query
          name: sessionid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '402':
          description: Waiting for payment
        '404':
          description: Session not found
        '500':
          description: Server error

  /api/sessions:
    get:
      summary: Get client sessions
      description: Get sessions. This means all prepaid sessions, some of them can be connected, some disconnected
      operationId: getSessions
      parameters:
        - in: query
          name: active
          schema:
            type: boolean
            default: False
        - in: query
          name: notpaid
          schema:
            type: boolean
            default: False
        - in: query
          name: expired
          schema:
            type: boolean
            default: False
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions'
        '500':
          description: Server error

components:
  schemas:

